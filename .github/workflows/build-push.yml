name: Build and Push

on:
  workflow_dispatch:
    inputs:
      version:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: nyow/deb-builder:ha
    steps:
      - name: Download source file
        run: wget "https://github.com/fastfetch-cli/fastfetch/archive/refs/tags/${{ github.event.inputs.version }}.tar.gz"
      - name: Extract source file
        run: tar xf "${{ github.event.inputs.version }}.tar.gz" && rm "${{ github.event.inputs.version }}.tar.gz"
      - name: Build the package
        env:
          DEBFULLNAME: ${{ vars.DEBFULLNAME }}
          DEBEMAIL: ${{ vars.DEBEMAIL }}
        run: |
          cd fastfetch-${{ github.event.inputs.version }}
          dch -v ${{ github.event.inputs.version }}nyow --force-distribution -D ha "Bump version."
          mk-build-deps --install --tool 'apt -y --no-install-recommends' debian/control
          dpkg-buildpackage -us -uc
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4.3.5
        with:
          name: build-artifacts
          path: |
            *.dsc
            *.tar.gz
            *.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.version }}nyow
          name: ${{ github.event.inputs.version }}nyow
          body: Release ${{ github.event.inputs.version }}nyow
          artifacts: |
            *.dsc
            *.tar.xz
            *.deb

  push:
    needs: build
    runs-on: ubuntu-latest
    env:
      DIRECTORY_NAME: fastfetch_${{ github.event.inputs.version }}nyow
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: '${{ env.DIRECTORY_NAME }}'
      - name: Compress artifact directory
        run: |
          tar -cJvf $DIRECTORY_NAME.tar.xz -C $DIRECTORY_NAME .
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SFTP_PRIVATE_KEY }}
      - name: Push artifact to Nyow archive
        run: |
          sftp -P ${{ secrets.SFTP_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SFTP_USERNAME }}@${{ secrets.SFTP_HOST }} << EOF
          put $DIRECTORY_NAME.tar.xz /ha-unstable/
          bye
          EOF
